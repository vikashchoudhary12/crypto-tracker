{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updateAsset } from '../features/assets/assetsSlice';\nexport default function PriceUpdater() {\n  _s();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const randomChange = () => (Math.random() - 0.5) * 2; // ±1%\n\n      dispatch(updateAsset({\n        symbol: ['BTC', 'ETH', 'USDT', 'XRP', 'BNB', 'SOL'][Math.floor(Math.random() * 6)],\n        changes: {\n          price: p => +(p * (1 + randomChange() / 100)).toFixed(2),\n          '1h': v => +(v + randomChange() / 4).toFixed(2),\n          '24h': v => +(v + randomChange() / 2).toFixed(2),\n          '7d': v => +(v + randomChange() / 8).toFixed(2)\n        }\n      }));\n    }, 2000);\n    return () => clearInterval(interval);\n  }, [dispatch]);\n  return null;\n}\n_s(PriceUpdater, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n_c = PriceUpdater;\nvar _c;\n$RefreshReg$(_c, \"PriceUpdater\");","map":{"version":3,"names":["useEffect","useDispatch","updateAsset","PriceUpdater","_s","dispatch","interval","setInterval","randomChange","Math","random","symbol","floor","changes","price","p","toFixed","v","clearInterval","_c","$RefreshReg$"],"sources":["C:/Users/vikash choudhary/Desktop/crypot/src/components/PriceUpdater.js"],"sourcesContent":["import { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { updateAsset } from '../features/assets/assetsSlice'\r\n\r\nexport default function PriceUpdater() {\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const randomChange = () => (Math.random() - 0.5) * 2 // ±1%\r\n      \r\n      dispatch(updateAsset({\r\n        symbol: ['BTC', 'ETH', 'USDT', 'XRP', 'BNB', 'SOL'][Math.floor(Math.random() * 6)],\r\n        changes: {\r\n          price: (p) => +(p * (1 + randomChange()/100)).toFixed(2),\r\n          '1h': (v) => +(v + randomChange()/4).toFixed(2),\r\n          '24h': (v) => +(v + randomChange()/2).toFixed(2),\r\n          '7d': (v) => +(v + randomChange()/8).toFixed(2)\r\n        }\r\n      }))\r\n    }, 2000)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [dispatch])\r\n\r\n  return null\r\n}"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,WAAW,QAAQ,gCAAgC;AAE5D,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAMC,QAAQ,GAAGJ,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,MAAMM,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC,MAAMC,YAAY,GAAGA,CAAA,KAAM,CAACC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,EAAC;;MAErDL,QAAQ,CAACH,WAAW,CAAC;QACnBS,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAACF,IAAI,CAACG,KAAK,CAACH,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAClFG,OAAO,EAAE;UACPC,KAAK,EAAGC,CAAC,IAAK,CAAC,CAACA,CAAC,IAAI,CAAC,GAAGP,YAAY,CAAC,CAAC,GAAC,GAAG,CAAC,EAAEQ,OAAO,CAAC,CAAC,CAAC;UACxD,IAAI,EAAGC,CAAC,IAAK,CAAC,CAACA,CAAC,GAAGT,YAAY,CAAC,CAAC,GAAC,CAAC,EAAEQ,OAAO,CAAC,CAAC,CAAC;UAC/C,KAAK,EAAGC,CAAC,IAAK,CAAC,CAACA,CAAC,GAAGT,YAAY,CAAC,CAAC,GAAC,CAAC,EAAEQ,OAAO,CAAC,CAAC,CAAC;UAChD,IAAI,EAAGC,CAAC,IAAK,CAAC,CAACA,CAAC,GAAGT,YAAY,CAAC,CAAC,GAAC,CAAC,EAAEQ,OAAO,CAAC,CAAC;QAChD;MACF,CAAC,CAAC,CAAC;IACL,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAME,aAAa,CAACZ,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;EAEd,OAAO,IAAI;AACb;AAACD,EAAA,CAtBuBD,YAAY;EAAA,QACjBF,WAAW;AAAA;AAAAkB,EAAA,GADNhB,YAAY;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}