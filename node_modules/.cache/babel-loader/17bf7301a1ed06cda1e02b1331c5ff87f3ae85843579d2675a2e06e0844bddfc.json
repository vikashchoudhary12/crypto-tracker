{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateAsset } from '../features/assets/assetsSlice';\nexport default function PriceUpdater() {\n  _s();\n  const dispatch = useDispatch();\n  const assets = useSelector(state => state.assets);\n  const formatLargeNumber = value => {\n    if (value >= 1e12) return `$${(value / 1e12).toFixed(2)}T`;\n    if (value >= 1e9) return `$${(value / 1e9).toFixed(2)}B`;\n    if (value >= 1e6) return `$${(value / 1e6).toFixed(2)}M`;\n    return `$${value.toFixed(2)}`;\n  };\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const randomChange = () => (Math.random() - 0.5) * 1.5;\n      const asset = assets[Math.floor(Math.random() * assets.length)];\n      const priceChange = randomChange() / 100;\n      const newPrice = asset.price * (1 + priceChange);\n      const volumeChange = Math.abs(randomChange() * 5);\n      const marketCapValue = parseFloat(asset.marketCap.replace(/[^0-9.]/g, '')) * 1e9;\n      const volumeValue = parseFloat(asset.volume24h.replace(/[^0-9.]/g, '')) * 1e9;\n      dispatch(updateAsset({\n        symbol: asset.symbol,\n        changes: {\n          price: newPrice,\n          '1h': asset['1h'] + randomChange() / 3,\n          '24h': asset['24h'] + randomChange() / 2,\n          '7d': asset['7d'] + randomChange() / 5,\n          volume24h: formatLargeNumber(volumeValue * (1 + volumeChange / 100)),\n          marketCap: formatLargeNumber(marketCapValue * (1 + priceChange))\n        }\n      }));\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [dispatch, assets]);\n  return null;\n}\n_s(PriceUpdater, \"tGd5tkCXCiZ1oL60TxxG+yOEsoA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = PriceUpdater;\nvar _c;\n$RefreshReg$(_c, \"PriceUpdater\");","map":{"version":3,"names":["useEffect","useDispatch","useSelector","updateAsset","PriceUpdater","_s","dispatch","assets","state","formatLargeNumber","value","toFixed","interval","setInterval","randomChange","Math","random","asset","floor","length","priceChange","newPrice","price","volumeChange","abs","marketCapValue","parseFloat","marketCap","replace","volumeValue","volume24h","symbol","changes","clearInterval","_c","$RefreshReg$"],"sources":["C:/Users/vikash choudhary/Desktop/crypot/src/components/PriceUpdater.js"],"sourcesContent":["import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateAsset } from '../features/assets/assetsSlice'\r\n\r\nexport default function PriceUpdater() {\r\n  const dispatch = useDispatch()\r\n  const assets = useSelector(state => state.assets)\r\n\r\n  const formatLargeNumber = (value) => {\r\n    if (value >= 1e12) return `$${(value / 1e12).toFixed(2)}T`\r\n    if (value >= 1e9) return `$${(value / 1e9).toFixed(2)}B`\r\n    if (value >= 1e6) return `$${(value / 1e6).toFixed(2)}M`\r\n    return `$${value.toFixed(2)}`\r\n  }\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const randomChange = () => (Math.random() - 0.5) * 1.5\r\n      const asset = assets[Math.floor(Math.random() * assets.length)]\r\n      \r\n      const priceChange = randomChange()/100\r\n      const newPrice = asset.price * (1 + priceChange)\r\n      const volumeChange = Math.abs(randomChange() * 5)\r\n      const marketCapValue = parseFloat(asset.marketCap.replace(/[^0-9.]/g, '')) * (1e9)\r\n      const volumeValue = parseFloat(asset.volume24h.replace(/[^0-9.]/g, '')) * (1e9)\r\n\r\n      dispatch(updateAsset({\r\n        symbol: asset.symbol,\r\n        changes: {\r\n          price: newPrice,\r\n          '1h': asset['1h'] + randomChange()/3,\r\n          '24h': asset['24h'] + randomChange()/2,\r\n          '7d': asset['7d'] + randomChange()/5,\r\n          volume24h: formatLargeNumber(volumeValue * (1 + volumeChange/100)),\r\n          marketCap: formatLargeNumber(marketCapValue * (1 + priceChange))\r\n        }\r\n      }))\r\n    }, 1000)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [dispatch, assets])\r\n\r\n  return null\r\n}"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,WAAW,QAAQ,gCAAgC;AAE5D,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAMM,MAAM,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACD,MAAM,CAAC;EAEjD,MAAME,iBAAiB,GAAIC,KAAK,IAAK;IACnC,IAAIA,KAAK,IAAI,IAAI,EAAE,OAAO,IAAI,CAACA,KAAK,GAAG,IAAI,EAAEC,OAAO,CAAC,CAAC,CAAC,GAAG;IAC1D,IAAID,KAAK,IAAI,GAAG,EAAE,OAAO,IAAI,CAACA,KAAK,GAAG,GAAG,EAAEC,OAAO,CAAC,CAAC,CAAC,GAAG;IACxD,IAAID,KAAK,IAAI,GAAG,EAAE,OAAO,IAAI,CAACA,KAAK,GAAG,GAAG,EAAEC,OAAO,CAAC,CAAC,CAAC,GAAG;IACxD,OAAO,IAAID,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC,EAAE;EAC/B,CAAC;EAEDX,SAAS,CAAC,MAAM;IACd,MAAMY,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC,MAAMC,YAAY,GAAGA,CAAA,KAAM,CAACC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,GAAG;MACtD,MAAMC,KAAK,GAAGV,MAAM,CAACQ,IAAI,CAACG,KAAK,CAACH,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGT,MAAM,CAACY,MAAM,CAAC,CAAC;MAE/D,MAAMC,WAAW,GAAGN,YAAY,CAAC,CAAC,GAAC,GAAG;MACtC,MAAMO,QAAQ,GAAGJ,KAAK,CAACK,KAAK,IAAI,CAAC,GAAGF,WAAW,CAAC;MAChD,MAAMG,YAAY,GAAGR,IAAI,CAACS,GAAG,CAACV,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC;MACjD,MAAMW,cAAc,GAAGC,UAAU,CAACT,KAAK,CAACU,SAAS,CAACC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC,GAAI,GAAI;MAClF,MAAMC,WAAW,GAAGH,UAAU,CAACT,KAAK,CAACa,SAAS,CAACF,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC,GAAI,GAAI;MAE/EtB,QAAQ,CAACH,WAAW,CAAC;QACnB4B,MAAM,EAAEd,KAAK,CAACc,MAAM;QACpBC,OAAO,EAAE;UACPV,KAAK,EAAED,QAAQ;UACf,IAAI,EAAEJ,KAAK,CAAC,IAAI,CAAC,GAAGH,YAAY,CAAC,CAAC,GAAC,CAAC;UACpC,KAAK,EAAEG,KAAK,CAAC,KAAK,CAAC,GAAGH,YAAY,CAAC,CAAC,GAAC,CAAC;UACtC,IAAI,EAAEG,KAAK,CAAC,IAAI,CAAC,GAAGH,YAAY,CAAC,CAAC,GAAC,CAAC;UACpCgB,SAAS,EAAErB,iBAAiB,CAACoB,WAAW,IAAI,CAAC,GAAGN,YAAY,GAAC,GAAG,CAAC,CAAC;UAClEI,SAAS,EAAElB,iBAAiB,CAACgB,cAAc,IAAI,CAAC,GAAGL,WAAW,CAAC;QACjE;MACF,CAAC,CAAC,CAAC;IACL,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMa,aAAa,CAACrB,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACN,QAAQ,EAAEC,MAAM,CAAC,CAAC;EAEtB,OAAO,IAAI;AACb;AAACF,EAAA,CAvCuBD,YAAY;EAAA,QACjBH,WAAW,EACbC,WAAW;AAAA;AAAAgC,EAAA,GAFJ9B,YAAY;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}